services:
  postgres:
    container_name: ms_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'

    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - microservices-net
    restart: unless-stopped
  mongodb:
    container_name: ms_mongo_db
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: test
      MONGO_INITDB_ROOT_PASSWORD: test

  mongo-express:
    container_name: ms_mongo_express
    image: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=test
      - ME_CONFIG_MONGODB_ADMINPASSWORD=test
      - ME_CONFIG_MONGODB_SERVER=mongodb
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net
  kafka:
    image: bitnami/kafka:3.4
    container_name: ms_kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CFG_NODE_ID: 1
    networks:
      - microservices-net
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=localhost:9092
    depends_on:
      - kafka
      - zookeeper
    networks:
      - microservices-net

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net

  mail-dev:
    container_name: ms_mail_dev
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: mongodb
      KC_DB_URL_HOST: localhost
      KC_DB_PORT: 27017
      KC_DB_USERNAME: test
      KC_DB_PASSWORD: test
      KC_DB_DATABASE: customer
    command: start-dev
    ports:
      - 8080:8080

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongo: